name: Build and Publish C# Package
on:
  push:
    tags:
      - 'v*' # Trigger on version tags
      - 'cs*'
  workflow_dispatch: # Allow manual triggering

jobs:
  build-native:
    name: Build native binaries for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build native release (gasless)
        run: cargo build --release -p gasless

      - name: Upload native binary
        uses: actions/upload-artifact@v4
        with:
          name: rust-native-${{ matrix.os }}
          path: gasless/target/release/

build-wasm:
    name: Build wasm binary
    runs-on: ubuntu-latest
    needs: build-native

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Build wasm release (gasless)
        run: cargo build --release --target wasm32-unknown-unknown -p gasless

      - name: Upload wasm binary
        uses: actions/upload-artifact@v4
        with:
          name: rust-wasm-binary
          path: target/wasm32-unknown-unknown/release/

  package:
    name: Package artifacts
    needs: [build-native, build-wasm]
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Find relevant artifacts
        run: |
          mkdir -p release
          find target -type f \( -name "*.so" -o -name "*.dylib" -o -name "*.dll" \) -exec cp {} release/ \;
          find ./artifacts -type f -name "*.wasm" -exec cp {} release/ \;

      - name: Upload for release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
